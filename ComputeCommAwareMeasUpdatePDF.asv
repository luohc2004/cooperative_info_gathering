function [likelihoodPdf,measUpdatePdf] = ComputeCommAwareMeasUpdatePDF(targetUpdatePdf,agent,meas,commStatus,agentParam,sensorParam,pdfParam,nState,id)

nAgent = length(agentParam);

% probability of communication-aware measurement correction P(z_k|X_k):

% 0. PDF initialization
measUpdatePdf = ones(size(targetUpdatePdf));

for iAgent = 1:nAgent
    
    % 1. take likelihood PDF: NOW IT IS ONLY FOR AGENT 
    likelihoodPdf = ComputeLikelihoodPDF(meas,agentParam(2),sensorParam,pdfParam,nState);

    % 2. compute probability of delivery for communication part
    beta(iAgent) = ComputeCommProb(agent(id).s,agent(iAgent).s);
    
    if commStautus == 1
        CommProb(iAgent) = beta(iAgent);
    else
        CommProb(iAgent) = 1-beta(iAgent);
    end
    
    measUpdatePdf = measUpdatePdf*CommProb(iAgent)*likelihoodPdf.*targetUpdatePdf;
end


% measUpdatePdf = measUpdatePdf./(sum(sum(measUpdatePdf))*(pdfParam.dRefPt^nState));

end